---
title: "Questions about FXTAS Sequence Data"
format:
  html:
    toc: true
    toc-depth: 4
    toc-float: true
    number-sections: true
    embed-resources: true
  docx:
    number-sections: true
---

```{r, include = FALSE}

knitr::opts_chunk$set(
  collapse = TRUE,
  echo = FALSE,
  message = FALSE,
  warning = FALSE,
  comment = "#>",
  fig.width = 7.5,
  fig.height = 4
)

# update 'asis' chunk to allow inline code
knitr::knit_engines$set(asis = function(options) {
  if (options$echo && options$eval) knitr::knit_child(text = options$code)
})
```

```{r setup}
#| message: false
library(fxtas)
devtools::load_all()
library(pander)
library(table1)
library(dplyr)
library(magrittr)
library(DT) # potentially update required/suggested packages
NA.label1 = "Missing"
column_var = "Recruited in study phase"
column_var = "FX**"
# load_all()

phase <- ifelse(column_var == "Recruited in study phase", TRUE, FALSE)
cgg <- ifelse(column_var == "FX**", TRUE, FALSE)
```

# General data processing notes

## Missing codes

The missing codes 777, 888, and 999 were converted to `NA` for all variables, unless noted otherwise below.

# Data from first visits

## APOE

```{r}
apoe.n = gp34 |> missing_pattern_by_ID(variable = "ApoE")
```


The following patients have ApoE with differences between visits will need to be addressed with Flora; the samples may have been run differently between visit leading to different APoE values. 

```{r, "multiple ApoE values", results = "asis"}

gp34 |> 
  semi_join(apoe.n |> filter(n_vals > 1), by = "FXS ID") |> 
  select(`FXS ID`, `Visit Date`, `Event Name` ,ApoE) |> 
  arrange(`FXS ID`, `Visit Date`) |> 
  split(~`FXS ID`) |> 
  pander()

```


List of patients with missing ApoE data:

```{r}
apoe.n = gp34 |> missing_pattern_by_ID(variable = "ApoE (backfilled)")

apoe_na <- gp34 |> 
  semi_join(apoe.n |> filter(n_vals == 0), by = "FXS ID") |> 
  select(`FXS ID`, `Visit Date`, `Event Name` , `ApoE (backfilled)`) |> 
  arrange(`FXS ID`, `Visit Date`)
```

:::{.callout-note}
<b>The list can be downloaded to `csv` or `excel` by clicking on the `Download` button at the top of the table.</b>
:::

```{r, results='asis'}
DT::datatable(
  apoe_na, rownames = FALSE,
  extensions = c('Buttons', "RowGroup"),
  options = list(
    dom = 'Bfrtip',
    # columnDefs = list(
    #   list(
    #     visible=FALSE,
    #     targets=c(0)
    #   )
    # ),
    buttons = list(
      list(
        extend = 'collection',
        buttons = list(
          list(
            extend = 'csv',
            filename = "GP3_GP4_Missing_ApoE"
          ),
          list(
            extend = 'excel',
            filename = "GP3_GP4_Missing_ApoE"
          )
        ),
        text = "Download"
      )
    ),
    rowGroup = list(dataSrc = 0)
  )
)

```

## CGG

List of patients with missing CGG data:  

```{r, include = TRUE}
cgg.n = gp34 |> missing_pattern_by_ID(variable = "CGG (backfilled)")

# check fxtas stage where CGG is missing
cgg_na <- gp34 |> 
  semi_join(
    cgg.n |> 
      filter(
        n_vals == 0), 
    by = "FXS ID") |> 
  select(`FXS ID`, `Visit Date`, `Event Name` , `CGG (backfilled)`) |> 
  arrange(`FXS ID`, `Visit Date`)

```

:::{.callout-note}
<b>The list can be downloaded to `csv` or `excel` by clicking on the `Download` button at the top of the table.</b>
:::

```{r}
DT::datatable(
  cgg_na, rownames = FALSE,
  extensions = c('Buttons'),
  options = list(
    dom = 'Bfrtip',
    buttons = list(
      list(
        extend = 'collection',
        buttons = list(
          list(
            extend = 'csv',
            filename = "GP3_GP4_Missing_CGG"
          ),
          list(
            extend = 'excel',
            filename = "GP3_GP4_Missing_CGG"
          )
        ),
        text = "Download"
      )
    )
  )
)

```


