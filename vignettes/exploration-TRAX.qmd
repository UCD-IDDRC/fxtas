---
title: "Questions about FXTAS Sequence Data"
format:
  html:
    toc: true
    toc-depth: 4
    toc-float: true
    number-sections: true
  docx:
    number-sections: true
---

```{r, include = FALSE}

knitr::opts_chunk$set(
  collapse = TRUE,
  echo = FALSE,
  message = FALSE,
  warning = FALSE,
  comment = "#>",
  fig.width = 7.5,
  fig.height = 4
)

# update 'asis' chunk to allow inline code
knitr::knit_engines$set(asis = function(options) {
  if (options$echo && options$eval) knitr::knit_child(text = options$code)
})
```

```{r setup}
#| message: false
library(fxtas)
devtools::load_all()
library(pander)
library(table1)
library(dplyr)
library(magrittr)
NA.label1 = "Missing"
column_var = "Recruited in study phase"
column_var = "FX**"
# load_all()

phase <- ifelse(column_var == "Recruited in study phase", TRUE, FALSE)
cgg <- ifelse(column_var == "FX**", TRUE, FALSE)
```

# General data processing notes

## Missing codes

The missing codes 777, 888, and 999 were converted to `NA` for all variables, unless noted otherwise below.

## Age of onset

In the RedCap database, the "age of onset" variables were recorded using a mix of precise ages and decade-long ranges (for example, "`130`" = "teens", "`200`" = "twenties", etc.). For analysis as numeric variables, the decade codes were replaced by their midpoints (for example, "`130`" was replaced with 15, "`200`" with 25, etc.). The exception is code "`555`" = "lifelong", which was replaced by the minimum of 10 years and the smallest observed value for that age-of-onset variable; for example, if the smallest observed value for "age of tremor onset" was 8, then "`555`" would be replaced by 8. If the smallest observed value were 11, then "`555`" would be replaced by 10.

# Data from first visits

```{asis, echo=phase}
Here, we review the data from the first visits by each participant, stratified by 
the first study phase in which the participant enrolled (GP3 vs GP4).
```

```{asis, echo=cgg}
Here, we review the data from the first visits by each participant, stratified by CGG (`r paste0("<55 or", " \u2265", "55")`).
```


## Demographics

There is substantial missingness in both `Primary Ethnicity` and `Primary Race`; not sure if we will need these variables:  


Primary ethnicity we can drop. Primary race we may be able to look on Randi’s cards for that or ask her. There are only 44 to look up. 

```{r}

vars = c(
  "Age at first visit",
  "# visits",
  # column_var,
  "Gender",
  "Primary Ethnicity",
  "Primary Race"
  
)

table1(na.is.category = FALSE, 
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = trax_visit1)
```


## Study

```{r}
table1(na.is.category = FALSE, 
  NA.label = NA.label1,
  formula(paste(
    "~", paste(formulaic::add.backtick("Study"), collapse = " + "), 
    "|",
    column_var |> formulaic::add.backtick())),
  data = trax_visit1)
```


## CGG

```{r}
cgg.n = trax |> missing_pattern_by_ID(variable = "CGG")
```

There's a lot of missing data in CGG as well:

```{r}

vars = grep("^CGG", names(trax), value = TRUE)

table1(na.is.category = FALSE, 
  NA.label = NA.label1,
  formula(paste(
    "~", paste(formulaic::add.backtick(vars), collapse = " + "), 
    "|",
    column_var |> formulaic::add.backtick())),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = trax_visit1)
```

`r cgg.n |> filter(first_missing) |> pull(any_nonmissing) |> sum()` of these participants have later records with non-missing CGG values:

```{r}
if(cgg.n |> filter(first_missing) |> pull(any_nonmissing) |> sum() > 0){
  trax |> 
  semi_join(
    cgg.n |> 
      filter(
        first_missing,
        any_nonmissing), 
    by = "FXS ID") |> 
  select(`FXS ID`, `Visit Date`, `Event Name` , CGG) |> 
  arrange(`FXS ID`, `Visit Date`) |> 
  split(~`FXS ID`) |> 
  pander()
}
```

Some participants have multiple CGG values:

```{r, "multiple CGG values", include = TRUE, results = "asis"}

trax |> 
  semi_join(
    cgg.n |> 
      filter(
        n_vals > 1), 
    by = "FXS ID") |> 
  select(`FXS ID`, `Visit Date`, `Event Name` , CGG) |> 
  arrange(`FXS ID`, `Visit Date`) |> 
  split(~`FXS ID`) |> 
  pander()

```

We decided to use the most recent CGG value.

```{r, include = TRUE}
# check fxtas stage where CGG is missing
trax |> 
  filter(is.na(`FXTAS Stage (0-5)`)) |> 
  select(`FXS ID`, `Event Name`, CGG, `FXTAS Stage (0-5)`) |> 
  pander()

```



**Question:** can we fill in the earlier values using later values?

Yes this is reasonable. Shouldn’t change between visits.  
From Randi: use later versions if inconsistent, might change due to improvements in assays. 

## Lifestyle

"Alcohol Abuse" in GP3 (`mds_psy_alco`) and "Alcohol Use" in GP4 (`new_mds_psy_alco`) were combined as "Alcohol use/abuse".

```{r}
vars = c("Drug use",
         "Marijuana use",
         "Alcohol use/abuse",
         "# of drinks per day now",
         "# of drinks per day now: missingness reasons")

table1(na.is.category = FALSE, 
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = trax_visit1)

```

## Cancer

**Question:** Can we fill in any data for Skin Cancer, Melanoma, or "Other Cancer"?  

Not sure I understand this question. 

**Question:** What should we do with codes 888 and 999 for these variables? Should they be treated as "Never used" or as actual missing values? What about blank entries (empty fields in RedCap)?  

Again I think 888 and 999 should be treated as “no” or “none” and missing values as “no data”. but will need to check with Kyoungmi. 

```{r}
vars = c(
  "Thyroid Cancer",
  "Skin Cancer",
  "Melanoma",
  "Prostate Cancer",
  "Other Cancer",
  "Any Cancer"
)

table1(na.is.category = FALSE, 
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  data = trax_visit1)
```


## Surgery

**Question:** Can we categorize the surgery data into a binary variable for GP4? (There are currently multiple surgery variables, `new_mds_med_sur1`, `new_mds_med_sur2`, etc., all with unstructured data.)  

Binary as in Surgery Yes or No? Yes I think that would be best. 

**Question:** Can we categorize surgery types into a small set of indicator variables?  

Yes, lets see what that will show.  

**Question:** Can we extract age at surgery and surgery dates from the unstructured text?  

We may, but this is really hit or miss and will take some time.  

**Question:** Do we have a source of anesthesia data for GP3?  

No.  

**Question:** Can we categorize anesthesia into a binary variable (yes/no), summarizing across all fields in GP4 (`new_mds_med_anes1`, `new_mds_med_anes2`, etc.)?  

Yes.  

**Question:** What should we do with missing codes and blanks?  

See my previous responses for 888, 999 and missing data.   

```{r}

vars = 
  c(
    "Surgery",
    "Anesthesia"
    # "Anesthesia (medic_surg_anes)", 
    # "Anesthesia (new_mds_med_anes1)"
    # "Other Cancer (detailed)", # don't include in table
    # "Surgery",
    # "Surgery type",
    # "Surgery: Type/Age",
    # "Surgery 2: Type/Age",
    # "Surgery 3: Type/Age",
    # "Surgery 4: Type/Age",
    # "Surgery 5: Type/Age",
  )
# grep(pattern = "surgery", ignore.case = TRUE, x = names(trax), value = TRUE)

library(table1)
table1(na.is.category = FALSE, 
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  data = trax_visit1)
```

## Tremors

**Question:** What should we do with missing codes and blanks?  

See my previous responses on the matter.   

```{r}
vars = c(
  
  "Intention tremor",
  "Resting tremor",
  "Postural tremor",
  "Intermittent tremor",
  "Any tremor (excluding Head Tremor)"
  # "Tremor: Age of onset"
  # "Tremor: Age of onset: missingness reasons"
)
table1(na.is.category = FALSE, 
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  render.continuous=c(
    .="N", 
    .="Mean (SD)", 
    .="Median [Min, Max]"),
  data = trax_visit1)

```

<br>

Age of onset and missingness reasons where any of the four above tremor types = "Yes":

```{r}
vars = c(
  "Tremor: Age of onset",
  "Tremor: Age of onset: missingness reasons"
)

footnote <- paste0(
  "Age of onset for those with 'Some tremors recorded'."
)

table1(na.is.category = FALSE, 
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = trax_visit1 |> 
    filter(`Any tremor (excluding Head Tremor)` == "Some tremors recorded"),
  footnote = footnote)
```

<br>

Do we have age of onset for those with 'No tremors recorded' or missing data?

```{r}
vars = c(
  "Tremor: Age of onset"
)

footnote <- paste0(
  "Age of onset for those with 'No tremors recorded' or missing data."
)

table1(na.is.category = FALSE, 
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = trax_visit1 |> 
    filter(`Any tremor (excluding Head Tremor)` == "No tremors recorded" |
             is.na(`Any tremor (excluding Head Tremor)`)),
  footnote = footnote)
```

```{r}
# store number
n_age_NoTremor <- trax_visit1 |> 
  filter((is.na(`Any tremor (excluding Head Tremor)`) | 
            `Any tremor (excluding Head Tremor)` == "No tremors recorded") & 
           !is.na(`Tremor: Age of onset`)) |> 
  nrow()
```

The `r n_age_NoTremor` patients with Age of Onset without having any tremor recorded are listed below.

```{r}
trax |> 
  filter((is.na(`Any tremor (excluding Head Tremor)`) | 
            `Any tremor (excluding Head Tremor)` == "No tremors recorded") &
           !is.na(`Tremor: Age of onset`)) |> 
  dplyr::select(`FXS ID`, `Event Name`, `Any tremor (excluding Head Tremor)`, 
                `Tremor: Age of onset`) |> 
  pander()
```

## Head tremors

**Question:** Can we get any data on head tremor for GP3?  

Unfortunately head tremor was not collected in GP3   

```{r}
vars = c(
  "Head tremor"
  # "Head Tremor: Age of onset"
  
)

footnote <- paste0(
  "Head tremor was not collected in GP3. Summaries provided are for GP4 only."
)

table1(na.is.category = FALSE, 
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = trax_visit1 |> filter(Study == "GP4"),
  footnote = footnote)

```

<br>

Age of onset and missingness reasons where "Head tremor" = "Yes":

```{r}
vars = c(
  "Head Tremor: Age of onset",
  "Head Tremor: Age of onset: missingness reasons"
  
)

footnote <- paste0(
  "Age of onset for those with a head tremor recorded."
)

table1(na.is.category = FALSE, 
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = trax_visit1 |> filter(Study == "GP4" & `Head tremor` == "Yes"),
  footnote = footnote)

```

```{r}
# store n for text
n_age_NoHeadTremor <- trax_visit1 |> 
    filter((`Head tremor` == "No" |
             is.na(`Head tremor`)) & 
             Study == "GP4" &
             !is.na(`Head Tremor: Age of onset`)) |>
  nrow()
```

Do we have age of onset for those with 'No' head tremor or missing data?  

There are `r n_age_NoHeadTremor` patients with age of onset without having a Head tremor.

```{r}
vars = c(
  "Head Tremor: Age of onset"
)

footnote <- paste0(
  "Age of onset for those with 'No' head tremor or missing data."
)

table1(na.is.category = FALSE, 
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = trax_visit1 |> 
    filter((`Head tremor` == "No" |
             is.na(`Head tremor`)) & 
             Study == "GP4"),
  footnote = footnote)
```

## Ataxia

**Question:** What should we do with missing codes and blanks?  

See my previous responses on the matter. 

```{r}

vars = c(
  "Ataxia",
  "Ataxia: severity",
  "Ataxia: severity*"
  # "Ataxia: Age of onset",
  # "Ataxia: Age of onset: missingness reasons"
)

table1(na.is.category = FALSE, 
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = trax_visit1)

```

<br>

Age of onset and missingness reasons where "Ataxia" = "Yes":

```{r}
vars = c(
  # "Ataxia",
  # "Ataxia: severity",
  # "Ataxia: severity*"
  "Ataxia: Age of onset",
  "Ataxia: Age of onset: missingness reasons"
)

table1(na.is.category = FALSE, 
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = trax_visit1 |> filter(Ataxia == "Yes"))
```

<br>

```{r}
# store n for text
n_age_NoAtaxia <- trax_visit1 |> 
    filter((Ataxia == "No" |
             is.na(Ataxia)) & 
             !is.na(`Ataxia: Age of onset`)) |>
  nrow()
```

Do we have age of onset for those with 'No' Ataxia or missing data?  

```{r}
vars = c(
  # "Ataxia",
  # "Ataxia: severity",
  # "Ataxia: severity*"
  "Ataxia: Age of onset",
  "Ataxia: Age of onset: missingness reasons"
)

footnote = paste0(
  "Age of onset for those with 'No' Ataxia or missing data."
)

table1(na.is.category = FALSE, 
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  footnote = footnote,
  data = trax_visit1 |> filter(Ataxia == "No" | is.na(Ataxia))
)
```

There are `r n_age_NoAtaxia` patients with age of onset without having Ataxia. These records are listed below.

```{r}
trax |> 
  filter((Ataxia == "No" |
             is.na(Ataxia)) & 
             !is.na(`Ataxia: Age of onset`)) |> 
  dplyr::select(`FXS ID`, `Event Name`, Ataxia, 
                `Ataxia: Age of onset`) |> 
  pander()
```

## Parkinsons

**Question:** Can we fill in Parkinsons (formal diagnosis) for GP3?  

No, because the question was not asked in GP3.    

**Question:** What should we do with missing codes and blanks?  

See my previous responses on the matter.  

```{r}

vars = grep("Parkinson", value = TRUE, names(trax))

table1(na.is.category = FALSE, 
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  data = trax_visit1)

```

## FXTAS Stage


**Question:** What should we do with missing codes and blanks?  

For categorical analysis, we merged 2.5 into 2, 3.5 into 4, and 4.5 into 5.


```{r}

vars = c(
  "FXTAS Stage (0-5)*",
  "FXTAS Stage (0-5)*: missingness reasons")

table1(na.is.category = FALSE, 
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = trax_visit1)

# trax |> 
#   filter(`FXTAS Stage (0-5)` %in% c(NA, "No Response (999)", "Missing (empty in RedCap)")) |> 
#   select(`FXS ID`, `Event Name`, `Visit Date`) |> 
#   arrange() |> 
#   readr::write_csv("inst/extdata/missing_FXTAS_stage.csv")

```

## BDS2

For `BDS2 Total Score`, codes `777`, `888`, and `999` are treated as NAs.

```{r}

vars = grep("BDS-2 Total Score", value = TRUE, names(trax), fixed = TRUE)

table1(na.is.category = FALSE, 
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = trax_visit1)

```


## SCID

```{r}

vars = c(
  "Was SCID completed?",
  "Bipolar I Disorder (MD01), Lifetime",
  "Bipolar I Disorder (MD01), Current",
  "Bipolar II Disorder (MD02), Lifetime",
  "Bipolar II Disorder (MD02), Current",
  "Other Bipolar Disorder (MD03), Lifetime",
  "Other Bipolar Disorder (MD03), Current",
  "Major Depressive Disorder (MD04), Lifetime",
  "Major Depressive Disorder (MD04), Current",
  "Mood Disorder Due to GMC (MD07), Lifetime",
  "Mood Disorder Due to a GMC (MD07), Current",
  "Substance-Induced Mood Dis. (MD08), Lifetime",
  "Substance-Induced Mood Dis. (MD08), Current",
  "Primary Psychotic Symptoms (PS01), Lifetime",
  "Primary Psychotic Symptoms (PS01), Current"
)

table1(na.is.category = FALSE, 
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = trax_visit1)

```

## SCL90

For analysis with the Ordinal SuStaIn method, we dichotomized each SCL90 measure as clinically elevated (60+) vs not.

```{r}

vars = grep(value = TRUE, fixed = TRUE, names(trax), pattern = "SCL90") |> sort()

table1(na.is.category = FALSE, 
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = trax_visit1)

# trax_visit1 |> ggplot(aes(x = `SCL90: Anxiety`, group = `FX*`)) + geom_histogram() + facet_wrap(~`FX*`, ncol = 1)
```

## MRI

```{r}

vars = c(
  "Cerebral Atrophy",
  "Cerebellar Atrophy",
  "Cerebral WM Hyperintensity",
  "Cerebellar WM Hyperintensity",
  "MCP-WM Hyperintensity",
  "Pons-WM Hyperintensity",
  "Sub-Insular WM Hyperintensity",
  "Periventricular WM Hyperintensity",
  "Splenium (CC)-WM Hyperintensity",
  "Genu (CC)-WM Hyperintensity",
  "Corpus Callosum-Thickness"
)

table1(na.is.category = FALSE, 
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  data = trax_visit1)

```

## WAIS

We treated "Verbal: IQ Score" (`wais_verb_iq`) and "Verbal Comprehension: Composite Score (VCI)" (`wais4_verbcomp_cs`) as interchangeable. 

(wais_verb_iq) is from WAIS version 3 and (wais4_v, erbcomp_cs) is from WAIS version 4. so the answer is No, primarily because the norms used to set the scaled scores are different - so what it took to get a standard score of 7 may be different between the norms of WAIS III and IV, but also if the actual subtest has changed then it's certainly not a direct comparison as they are different tests.  

**Question:** Can we combine "Full Scale: IQ Score" (`wais_fullscale_iq`) and "Full Scale: Composite Score (FSIQ)" (`wais4_fullscale_cs`)?  

See previous answer on VERBAL IQ  

**Question:** Do we have any data for perceptual reasoning, working memory, or processing speed for GP3?  

No, b/c WAIS 3 does not have these scores but the subsequent WAIS 4 does.  

```{r}

vars = c(
  # "Verbal: IQ Score",
  "Verbal Comprehension Composite Score",
  "Verbal Comprehension Composite Score: missingness reasons",
  
  "Perceptual Reasoning Composite Score",
  "Perceptual Reasoning Composite Score: missingness reasons",
  
  "WAIS IV Working Memory Composite Score (WMI)", 
  "WAIS IV Working Memory Composite Score (WMI): missingness reasons", 
  
  "WAIS IV Processing Speed Composite Score (PSI)",
  "WAIS IV Processing Speed Composite Score (PSI): missingness reasons",
  
  # "Full Scale: IQ Score",
  "Full Scale IQ",
  "Full Scale IQ: missingness reasons"
) # |> sapply(F = function(x) grep(value =  TRUE, fixed = TRUE, pattern = x, x = names(trax_visit1))) |> as.vector()

table1(na.is.category = FALSE, 
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min, Max]"),
  data = trax_visit1)

```

## CANTAB

For now, we used cutoffs taken from https://www.sciencedirect.com/science/article/pii/S2211034820302480?via%3Dihub


```{r}

# table1(na.is.category = FALSE, 
#   NA.label = NA.label1,
#   stratified_formula("Drugs used", column_var),
#   data = trax_visit1)


cantab_vars = c(
  "SWM Between errors",
  "SWM Between errors*",
  "SST Median correct RT on GO trials",
  "RVP A signal detection",
  "RVP A signal detection*",
  "OTS Problems solved on first choice",
  "PAL Total errors (adjusted)",
  "PAL Total errors (adjusted)*",
  "RTI Five-choice movement time",
  "RTI Five-choice movement time*") 
# |> 
#   sapply(F = function(x) grep(value =  TRUE, fixed = TRUE, pattern = x, x = names(trax_visit1))) |> 
# as.vector()

table1(na.is.category = FALSE, 
  NA.label = "Missing (empty in RedCap)",
  stratified_formula(cantab_vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = trax_visit1)
```

## Thyroid and other autoimmune diseases

```{r}

vars = c(
  "Hypothyroid",
  "Hyperthyroid",
  "Thyroid problems",
  "Lupus",
  "Rheumatoid arthritis",
  "Multiple Sclerosis: Workup",
  "ANA positive",
  "Sjogrens Syndrome",
  "Raynauds Syndrome",
  "Pulmonary Fibrosis",
  "Any Autoimmune"
)

table1(na.is.category = FALSE, 
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  data = trax_visit1)
```

## Kinesia

We categorized each kinesia variable as "0-1", "1-2", "2-3", and "3-4".

```{r}
kinesia_vars = c(
      "Kinesia Left Rest Tremor",
      "Kinesia Left Postural Tremor",
      "Kinesia Left Kinetic Tremor",
      "Kinesia Right Rest Tremor",
      "Kinesia Right Postural Tremor",
      "Kinesia Right Kinetic Tremor"
    )
kinesia_vars = 
  c(kinesia_vars,
    paste0(kinesia_vars, "*")) |> 
  sort()

table1(na.is.category = FALSE, 
  NA.label = NA.label1,
  stratified_formula(kinesia_vars, column_var),
  data = trax_visit1)

```


## Purdue pegboard for reaction time

```{r}
purdue_vars = c(
  "Purdue pegboard 1st Trial Total, R+L+B",
  "Purdue pegboard 1st Trial Total, R+L+B: missingness reasons")

table1(na.is.category = FALSE, 
  NA.label = NA.label1,
  stratified_formula(purdue_vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = trax_visit1)
```


# Visit dates

We also started looking at the longitudinal data, and had some questions about the visit dates:

## Missing visit dates

```{r}

tab = trax |> filter(is.na(`Visit Date`)) |> 
  select(Study:`Visit Date`)

```

There are `r nrow(tab)` records with missing visit dates.

**Question:** Can these missing dates be filled in?  

Yes I can fill these in.

```{r}
pander(tab)
```



## Duplicate visit dates

```{r}

tab = trax |> 
  group_by(`FXS ID`, `Visit Date`) |> 
  filter(n() > 1, !is.na(`Visit Date`[1])) |> 
  select(Study:`Visit Date`) |> 
  split(~`FXS ID`)

```

There are `r length(tab)` duplicate visit dates.

**Question:** Are these duplicate values correct?  

I will need to check these.  

```{r, results = "asis"}
if(length(tab) != 0){
  pander(tab)
}
```



## Visits out of event sequence

```{r}
ooo = trax |>
  select(`FXS ID`, `Visit Date`, `Event Name`) |>
  group_by(`FXS ID`) |>
  filter(is.unsorted(`Event Name`)) |>
  # filter(any(`decreased age`, na.rm = TRUE)) |>
  # ungroup() |>
  split(~`FXS ID`)
```

`r length(ooo)` participants have visits occurring out of chronological order (e.g., GP4 trax_visit1 before GP3 Visit 1).

**Question:** Are these records correct?  

I will need to check these.  

```{r, results = "asis"}
if(length(ooo) != 0){
  pander(ooo)
}

```

