---
title: "FXTAS Sequence Data Summary"
---

```{r}
#| include: false
knitr::opts_chunk$set(
  collapse = TRUE,
  echo = FALSE,
  message = FALSE,
  warning = FALSE,
  comment = "#>",
  fig.width = 7.5,
  fig.height = 4
)

# update 'asis' chunk to allow inline code
knitr::knit_engines$set(asis = function(options) {
  if (options$echo && options$eval) knitr::knit_child(text = options$code)
})
```

```{r setup}
#| message: false
library(fxtas)
devtools::load_all()
library(pander)
library(table1)
library(dplyr)
library(magrittr)
NA.label1 = "Missing"
column_var = "Recruited in study phase"
column_var = "FX**"

visit1_cgg_complete = visit1 |> filter(!is.na(`FX*`))

phase <- ifelse(column_var == "Recruited in study phase", TRUE, FALSE)
cgg <- ifelse(column_var == "FX**", TRUE, FALSE)
```

# Data from first visits

```{asis, echo=phase}
Here, we review the data from the first visits by each participant, stratified by 
the first study phase in which the participant enrolled (GP3 vs GP4).
```

```{asis, echo=cgg}
Here, we review the data from the first visits by each participant, stratified by CGG (`r paste0("<55 or", " \u2265", "55")`).
```


## Demographics

```{r}

vars = c(
  "Age at first visit",
  "# visits",
  # column_var,
  "Gender",
  "Primary Ethnicity",
  "Primary Race"
  
)

table1(
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = visit1_cgg_complete)
```

## Study

```{r}
table1(
  NA.label = NA.label1,
  formula(paste(
    "~", paste(formulaic::add.backtick("Study"), collapse = " + "), 
    "|",
    column_var |> formulaic::add.backtick())),
  data = visit1_cgg_complete)
```

## Apo-E

```{r}
# vars = grep("^ApoE", names(gp34), value = TRUE)
vars = "ApoE*"
table1(
  NA.label = NA.label1,
  
  paste(
    "~", 
    paste(
      formulaic::add.backtick(vars), 
      collapse = " + "), 
    "|",
    column_var |> formulaic::add.backtick()) |> 
    formula(),
  # render.missing=c("Empty in RedCap"="FREQ (PCT%)"),
  data = visit1_cgg_complete)
```

## CGG

```{r}

vars = grep("^CGG", names(gp34), value = TRUE)

table1(
  NA.label = NA.label1,
  formula(paste(
    "~", paste(formulaic::add.backtick(vars), collapse = " + "), 
    "|",
    column_var |> formulaic::add.backtick())),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = visit1_cgg_complete)
```

## Drug use

```{r}
#| label: tbl-lifestyle
#| caption: "Drug use characteristics"
vars = c("Drug use",
         "Marijuana use",
         "Alcohol use/abuse",
         "# of drinks per day now",
         "# of drinks per day now: missingness reasons")

table1(
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  footnote = paste0(
    '"Alcohol Abuse" in GP3 (`mds_psy_alco`) ',
    'and "Alcohol Use" in GP4 (`new_mds_psy_alco`) ',
    'were combined as "Alcohol use/abuse".'),
  data = visit1_cgg_complete)

```

## Cancer

```{r}
vars = c(
  "Thyroid Cancer",
  "Skin Cancer",
  "Melanoma",
  "Prostate Cancer",
  "Other Cancer",
  "Any Cancer"
)

table1(
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  data = visit1_cgg_complete)
```

## Surgery

```{r}

vars = 
  c(
    "Surgery",
    "Anesthesia (medic_surg_anes)", 
    "Anesthesia (new_mds_med_anes1)"
    # "Other Cancer (detailed)", # don't include in table
    # "Surgery",
    # "Surgery type",
    # "Surgery: Type/Age",
    # "Surgery 2: Type/Age",
    # "Surgery 3: Type/Age",
    # "Surgery 4: Type/Age",
    # "Surgery 5: Type/Age",
  )
# grep(pattern = "surgery", ignore.case = TRUE, x = names(gp34), value = TRUE)

library(table1)
table1(
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  data = visit1_cgg_complete)
```

## Tremors

```{r}
vars = c(
  
  "Intention tremor",
  "Resting tremor",
  "Postural tremor",
  "Intermittent tremor",
  "Any tremor (excluding Head Tremor)"
  # "Tremor: Age of onset"
  # "Tremor: Age of onset: missingness reasons"
)
table1(
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  render.continuous=c(
    .="N", 
    .="Mean (SD)", 
    .="Median [Min, Max]"),
  data = visit1_cgg_complete)

```

<br>

```{r}
#| tbl-cap: "Age of onset for those with 'Some tremors recorded'."
#| label: "tbl-tremor-ao"
#| 
vars = c(
  "Tremor: Age of onset",
  # "Tremor: Age of onset: missingness reasons",
  NULL
)


table1(
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = visit1_cgg_complete |> 
    filter(`Any tremor (excluding Head Tremor)` == "Some tremors recorded"))
```

<br>

## Head tremors

```{r}
#| tbl-cap: Head tremors
#| label: tbl-head-tremors
vars = c(
  "Head tremor"
  # "Head Tremor: Age of onset"
  
)

footnote <- paste0(
  "Head tremor was not collected in GP3. Summaries provided are for GP4 only."
)

table1(
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = visit1_cgg_complete |> filter(Study == "GP4"),
  footnote = footnote)

```

<br>

```{r}
#| tbl-cap: "Age of onset for those with a head tremor recorded."
#| label: "tbl-head-tremor-AO"
vars = c(
  "Head Tremor: Age of onset",
  "Head Tremor: Age of onset: missingness reasons"
  
)

table1(
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = visit1_cgg_complete |> filter(Study == "GP4" & `Head tremor` == "Yes"))

```

## Ataxia

```{r}

vars = c(
  "Ataxia",
  "Ataxia: severity",
  "Ataxia: severity*"
  # "Ataxia: Age of onset",
  # "Ataxia: Age of onset: missingness reasons"
)

table1(
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = visit1_cgg_complete)

```

<br>

Age of onset and missingness reasons where "Ataxia" = "Yes":

```{r}
vars = c(
  # "Ataxia",
  # "Ataxia: severity",
  # "Ataxia: severity*"
  "Ataxia: Age of onset",
  "Ataxia: Age of onset: missingness reasons"
)

table1(
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = visit1_cgg_complete |> filter(Ataxia == "Yes"))
```

<br>

## Parkinsons

```{r}

vars = grep("Parkinson", value = TRUE, names(gp34))

table1(
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  data = visit1_cgg_complete)

```

## FXTAS Stage

```{r}

vars = c(
  "FXTAS Stage (0-5)*",
  "FXTAS Stage (0-5)*: missingness reasons")

table1(
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  footnote = "For categorical analysis, we merged 2.5 into 2, 3.5 into 4, and 4.5 into 5.",
  data = visit1_cgg_complete)

# gp34 |> 
#   filter(`FXTAS Stage (0-5)` %in% c(NA, "No Response (999)", "Missing (empty in RedCap)")) |> 
#   select(`FXS ID`, `Event Name`, `Visit Date`) |> 
#   arrange() |> 
#   readr::write_csv("inst/extdata/missing_FXTAS_stage.csv")

```

## BDS2

```{r}

vars = grep("BDS-2 Total Score", value = TRUE, names(gp34), fixed = TRUE)

table1(
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  footnote = "For `BDS2 Total Score`, codes `777`, `888`, and `999` are treated as NAs.",
  data = visit1_cgg_complete)

```

## MMSE



```{r}

vars = grep(
  "MMSE Total Score", 
  value = TRUE, 
  names(gp34), 
  fixed = TRUE)

table1(
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  footnote = "For `MMSE Total Score`, codes `777`, `888`, and `999` are treated as NAs.",
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = visit1_cgg_complete)

```

## SCID

```{r}

vars = c(
  "Was SCID completed?",
  "Bipolar I Disorder (MD01), Lifetime",
  "Bipolar I Disorder (MD01), Current",
  "Bipolar II Disorder (MD02), Lifetime",
  "Bipolar II Disorder (MD02), Current",
  "Other Bipolar Disorder (MD03), Lifetime",
  "Other Bipolar Disorder (MD03), Current",
  "Major Depressive Disorder (MD04), Lifetime",
  "Major Depressive Disorder (MD04), Current",
  "Mood Disorder Due to GMC (MD07), Lifetime",
  "Mood Disorder Due to a GMC (MD07), Current",
  "Substance-Induced Mood Dis. (MD08), Lifetime",
  "Substance-Induced Mood Dis. (MD08), Current",
  "Primary Psychotic Symptoms (PS01), Lifetime",
  "Primary Psychotic Symptoms (PS01), Current"
)

table1(
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = visit1_cgg_complete)

```

## SCL90

For analysis with the Ordinal SuStaIn method, we dichotomized each SCL90 measure as clinically elevated (60+) vs not.

```{r}

vars = grep(value = TRUE, fixed = TRUE, names(gp34), pattern = "SCL90") |> sort()

table1(
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = visit1_cgg_complete)

# visit1_cgg_complete |> ggplot(aes(x = `SCL90: Anxiety`, group = `FX*`)) + geom_histogram() + facet_wrap(~`FX*`, ncol = 1)
```

## MRI

```{r}

vars = c(
  "Cerebral Atrophy",
  "Cerebellar Atrophy",
  "Cerebral WM Hyperintensity",
  "Cerebellar WM Hyperintensity",
  "MCP-WM Hyperintensity",
  "Pons-WM Hyperintensity",
  "Sub-Insular WM Hyperintensity",
  "Periventricular WM Hyperintensity",
  "Splenium (CC)-WM Hyperintensity",
  "Genu (CC)-WM Hyperintensity",
  "Corpus Callosum-Thickness"
)

table1(
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  data = visit1_cgg_complete)

```

## WAIS

```{r}

vars = c(
  # "Verbal: IQ Score",
  "Verbal Comprehension: Composite Score (VCI)",
  
  "Perceptual Reasoning: Composite Score (PRI)",
  "Working Memory: Composite Score (WMI)", 
  "Processing Speed: Composite Score (PSI)",
  
  # "Full Scale: IQ Score",
  "Full Scale: Composite Score (FSIQ)"
) |> sapply(F = function(x) grep(value =  TRUE, fixed = TRUE, pattern = x, x = names(visit1_cgg_complete))) |> as.vector()

table1(
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min, Max]"),
  data = visit1_cgg_complete)

```

## CANTAB

For now, we used cutoffs taken from [@talebi2020cambridge].

```{r}

# table1(
#   NA.label = NA.label1,
#   stratified_formula("Drugs used", column_var),
#   data = visit1_cgg_complete)


cantab_vars = c(
  "SWM Between errors",
  "SWM Between errors*",
  "SST Median correct RT on GO trials",
  "RVP A signal detection",
  "RVP A signal detection*",
  "OTS Problems solved on first choice",
  "PAL Total errors (adjusted)",
  "PAL Total errors (adjusted)*",
  "RTI Five-choice movement time",
  "RTI Five-choice movement time*") 
# |> 
#   sapply(F = function(x) grep(value =  TRUE, fixed = TRUE, pattern = x, x = names(visit1_cgg_complete))) |> 
# as.vector()

table1(
  NA.label = "Missing (empty in RedCap)",
  stratified_formula(cantab_vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = visit1_cgg_complete)
```

## Thyroid and other autoimmune diseases

```{r}

vars = c(
  "Hypothyroid",
  "Hyperthyroid",
  "Thyroid problems",
  "Lupus",
  "Rheumatoid arthritis",
  "Multiple Sclerosis: Workup",
  "ANA positive",
  "Sjogrens Syndrome",
  "Raynauds Syndrome",
  "Pulmonary Fibrosis",
  "Any Autoimmune"
)

table1(
  NA.label = NA.label1,
  stratified_formula(vars, column_var),
  data = visit1_cgg_complete)
```

## Kinesia

We categorized each kinesia variable as "0-1", "1-2", "2-3", and "3-4".

```{r}
kinesia_vars = c(
  "Kinesia Left Rest Tremor",
  "Kinesia Left Postural Tremor",
  "Kinesia Left Kinetic Tremor",
  "Kinesia Right Rest Tremor",
  "Kinesia Right Postural Tremor",
  "Kinesia Right Kinetic Tremor"
)
kinesia_vars = 
  c(kinesia_vars,
    paste0(kinesia_vars, "*")) |> 
  sort()

table1(
  NA.label = NA.label1,
  stratified_formula(kinesia_vars, column_var),
  data = visit1_cgg_complete)

```


## Purdue pegboard for reaction time

```{r}
purdue_vars = c(
  "Purdue pegboard 1st Trial Total, R+L+B",
  "Purdue pegboard 1st Trial Total, R+L+B: missingness reasons")

table1(
  NA.label = NA.label1,
  stratified_formula(purdue_vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = visit1_cgg_complete)
```


## MOCA total score

```{r}

moca_vars = c(
  "MOCA Total score",
  "MOCA Total score: missingness reasons"
)
table1(
  NA.label = NA.label1,
  stratified_formula(moca_vars, column_var),
  # render.continuous = c(.="N", .="Mean (SD)", .="Median [Min,  Max]"),
  data = visit1_cgg_complete)

```

# General data processing notes {.appendix}

## Missing codes {.appendix}

The missing codes 777, 888, and 999 were converted to `NA` for all variables, unless noted otherwise below.

## Age of onset

In the RedCap database, the "age of onset" variables were recorded using a mix of precise ages and decade-long ranges (for example, "`130`" = "teens", "`200`" = "twenties", etc.). For analysis as numeric variables, the decade codes were replaced by their midpoints (for example, "`130`" was replaced with 15, "`200`" with 25, etc.). The exception is code "`555`" = "lifelong", which was replaced by the minimum of 10 years and the smallest observed value for that age-of-onset variable; for example, if the smallest observed value for "age of tremor onset" was 8, then "`555`" would be replaced by 8. If the smallest observed value were 11, then "`555`" would be replaced by 10.


# References{.unnumbered}

::: {#refs}
:::
