% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_OSA.R
\name{run_OSA}
\alias{run_OSA}
\title{Run the Ordinal SuStaIn Algorithm (OSA)}
\usage{
run_OSA(
  patient_data,
  prob_correct,
  prob_score = compute_prob_scores(dataset = patient_data, prob_correct = prob_correct,
    biomarker_levels = biomarker_levels),
  score_vals = build_score_vals(biomarker_levels),
  biomarker_levels = get_levels(patient_data, varnames = SuStaInLabels),
  SuStaInLabels = names(biomarker_levels),
  N_startpoints = 25,
  N_S_max = 8,
  N_iterations_MCMC = 100000L,
  output_folder = "output",
  dataset_name = "sample_data",
  use_parallel_startpoints = FALSE,
  seed = 1L,
  plot = FALSE,
  N_CV_folds = 0,
  CV_fold_nums = 1:N_CV_folds,
  verbose = TRUE,
  keep_data = TRUE,
  fig_size = c(10, 10),
  ...
)
}
\arguments{
\item{patient_data}{patient biomarker data}

\item{prob_correct}{the probability of correctly classifying the underlying biomarker level: p(obs = true)}

\item{prob_score}{\link{array} probability of each score for all subjects across all biomarkers
\itemize{
\item dim = number of subjects x number of biomarkers x number of scores
}}

\item{score_vals}{a matrix specifying the scores for each biomarker
\itemize{
\item dim: number of biomarkers x number of scores
}}

\item{biomarker_levels}{a list containing the levels for each biomarker}

\item{SuStaInLabels}{the names of the biomarkers as a list of strings}

\item{N_startpoints}{number of startpoints to use in maximum likelihood step of SuStaIn, typically 25}

\item{N_S_max}{maximum number of subtypes, should be 1 or more}

\item{N_iterations_MCMC}{number of MCMC iterations, typically 1e5 or 1e6 but can be lower for debugging}

\item{output_folder}{where to save pickle files, etc.}

\item{dataset_name}{for naming pickle files}

\item{use_parallel_startpoints}{boolean for whether or not to parallelize the maximum likelihood loop}

\item{seed}{random number seed for python code}

\item{plot}{\code{\link[=logical]{logical()}} indicating whether to construct PVD plots via python subroutines}

\item{N_CV_folds}{number of cross-validation folds to create}

\item{CV_fold_nums}{which CV folds to run (for parallel processing)}

\item{verbose}{\code{\link[=logical]{logical()}} indicating whether to print debugging information}

\item{keep_data}{\code{\link[=logical]{logical()}} indicating whether to include the ata in the return object}

\item{fig_size}{python figure size, in inches (width, height)}

\item{...}{additional arguments passed to the Python function \code{pySuStaIn$OrdinalSustain()}}
}
\value{
a \code{\link[=list]{list()}}
}
\description{
Run the Ordinal SuStaIn Algorithm (OSA)
}
